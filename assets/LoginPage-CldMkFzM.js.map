{"version":3,"file":"LoginPage-CldMkFzM.js","sources":["../../src/modules/auth/config/login.config.ts","../../src/modules/auth/hooks/useLoginForm.ts","../../src/modules/auth/views/LoginView.tsx","../../src/pages/login/LoginPage.tsx"],"sourcesContent":["import { z } from 'zod';\nimport { Messages } from '@shared/constants/messages';\n\nexport const loginSchema = z.object({\n  email: z\n    .string()\n    .min(1, { message: Messages.EMAIL_REQUIRED })\n    .email({ message: Messages.INVALID_EMAIL_FORMAT }),\n  password: z\n    .string()\n    .min(1, { message: Messages.PASSWORD_REQUIRED })\n    .min(6, { message: Messages.PASSWORD_TOO_SHORT }),\n});\n\nexport type LoginFormData = z.infer<typeof loginSchema>;\n\nexport const validateLoginForm = (data: Partial<LoginFormData>) => {\n  try {\n    loginSchema.parse(data);\n    return { success: true, errors: null };\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      const formattedErrors = error.errors.reduce((acc, curr) => {\n        const field = curr.path[0] as keyof LoginFormData;\n        acc[field] = curr.message;\n        return acc;\n      }, {} as Record<keyof LoginFormData, string>);\n      \n      return { success: false, errors: formattedErrors };\n    }\n    \n    return { \n      success: false, \n      errors: { form: Messages.GENERAL_ERROR } \n    };\n  }\n};","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '@modules/auth/context/AuthContext';\nimport { Messages } from '@shared/constants/messages';\nimport { validateLoginForm, LoginFormData } from '@modules/auth/config/login.config';\n\nexport const useLoginForm = () => {\n  const [formData, setFormData] = useState<LoginFormData>({\n    email: '',\n    password: '',\n  });\n  const [errors, setErrors] = useState<Partial<Record<keyof LoginFormData, string>>>({});\n  const [generalError, setGeneralError] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { id, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [id]: value,\n    }));\n    \n    if (errors[id as keyof LoginFormData]) {\n      setErrors((prev) => ({\n        ...prev,\n        [id]: '',\n      }));\n    }\n    \n    if (generalError) {\n      setGeneralError('');\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setGeneralError('');\n    setIsSubmitting(true);\n    \n    try {\n      const validation = validateLoginForm(formData);\n      \n      if (!validation.success) {\n        setErrors(validation.errors as Partial<Record<keyof LoginFormData, string>> || {});\n        return;\n      }\n      \n      const success = login(formData.email, formData.password);\n      if (success) {\n        navigate('/');\n      } else {\n        setGeneralError(Messages.INVALID_CREDENTIALS);\n      }\n    } catch (error) {\n      setGeneralError(Messages.LOGIN_ERROR);\n      console.error(Messages.LOGIN_ERROR, error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const resetForm = () => {\n    setFormData({ email: '', password: '' });\n    setErrors({});\n    setGeneralError('');\n  };\n\n  return {\n    formData,\n    errors,\n    generalError,\n    isSubmitting,\n    handleChange,\n    handleSubmit,\n    resetForm\n  };\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { TextField } from '@shared/components/TextField';\nimport { Button } from '@shared/components/Button';\nimport { useLoginForm } from '@modules/auth/hooks/useLoginForm';\n\nexport const Login: React.FC = () => {\n  const {\n    formData,\n    errors,\n    generalError,\n    isSubmitting,\n    handleChange,\n    handleSubmit\n  } = useLoginForm();\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-secondary-900\">\n      <div className=\"bg-secondary-200 p-8 rounded-lg shadow-md w-full max-w-md mx-4\">\n        \n        {generalError && (\n          <div className=\"bg-danger-100 border border-danger-400 text-danger-700 px-4 py-3 rounded mb-4\">\n            {generalError}\n          </div>\n        )}\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <TextField\n              type=\"email\"\n              id=\"email\"\n              value={formData.email}\n              onChange={handleChange}\n              placeholder=\"seu@email.com\"\n              label=\"Email\"\n              error={errors.email}\n            />\n          </div>\n          \n          <div className=\"mb-6\">\n            <TextField \n              type=\"password\"\n              id=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"********\"\n              label=\"Senha\"\n              error={errors.password}\n            />\n          </div>\n          \n          <div className=\"flex items-center justify-between\">\n            <Button\n              type=\"submit\"\n              variant=\"primary\"\n              fullWidth\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? 'Entrando...' : 'Entrar'}\n            </Button>\n          </div>\n          \n          <div className=\"text-center mt-4\">\n            <p className=\"text-sm text-secondary-600\">\n              NÃ£o tem uma conta?{' '}\n              <Link to=\"/register\" className=\"text-primary-500 hover:text-primary-700\">\n                Cadastre-se\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport { Login } from '@modules/auth/views/LoginView';\n\nconst LoginPage: React.FC = () => {\n  return <Login />;\n};\n\nexport default LoginPage;"],"names":["loginSchema","z","Messages","validateLoginForm","data","error","acc","curr","field","useLoginForm","formData","setFormData","useState","errors","setErrors","generalError","setGeneralError","isSubmitting","setIsSubmitting","login","useAuth","navigate","useNavigate","e","id","value","prev","validation","Login","handleChange","handleSubmit","jsxs","jsx","TextField","Button","Link","LoginPage"],"mappings":"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"}