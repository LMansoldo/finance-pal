{"version":3,"file":"DetailPage-CygGveAD.js","sources":["../../src/modules/financial/hooks/useFinancialData.ts","../../node_modules/react-chartjs-2/dist/index.js","../../src/modules/financial/components/FinancialQuotationChart/FinancialQuotationChart.tsx","../../src/modules/financial/views/FinancialQuotationDetail.tsx","../../src/pages/detail/DetailPage.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { useState, useEffect } from 'react';\nimport { financialRepository } from '@modules/financial/repositories/financialRepository';\nimport { FinancialData } from '@modules/financial/types/FinancialData.type';\n\nexport const useFinancialData = (quotationId?: string) => {\n  const [data, setData] = useState<FinancialData[]>([]);\n  const [selectedQuotation, setSelectedQuotation] = useState<FinancialData | null>(null);\n  const [history, setHistory] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        const quotations = await financialRepository.getQuotations();\n        setData(quotations);\n        \n        quotations.forEach(quotation => {\n          financialRepository.saveQuotationHistory(quotation);\n        });\n        \n        if (quotationId) {\n          const current = quotations.find(q => q.id === quotationId) || null;\n          setSelectedQuotation(current);\n          \n          if (current) {\n            const quotationHistory = financialRepository.getQuotationHistory(quotationId);\n            setHistory(quotationHistory);\n          }\n        }\n      } catch (err) {\n        console.error(\"Erro ao buscar dados financeiros:\", err);\n        setError(\"Não foi possível carregar os dados financeiros. Tente novamente mais tarde.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    \n    const interval = setInterval(\n      fetchData, \n      quotationId ? 60000 : 300000\n    );\n    \n    return () => clearInterval(interval);\n  }, [quotationId]);\n\n  return { data, selectedQuotation, history, loading, error };\n};","import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  LineElement,\n  Title,\n  Tooltip,\n  PointElement,\n  Legend,\n} from 'chart.js';\n\nimport { FinancialData } from '@modules/financial/types/FinancialData.type';\n\nChartJS.register(CategoryScale, LinearScale, LineElement, Title, Tooltip, PointElement, Legend);\n\ninterface FinancialQuotationChartProps {\n  history: FinancialData[];\n  type: 'currency' | 'stock' | 'bitcoin';\n}\n\nexport const FinancialQuotationChart: React.FC<FinancialQuotationChartProps> = ({ history }) => {\n  if (history.length === 0) {\n    return (\n      <div className=\"p-6 rounded text-center\">\n        <p className=\"text-gray-100\">Não há dados suficientes para exibir o gráfico.</p>\n      </div>\n    );\n  }\n\n  const labels = history.map((item) => {\n    const date = new Date(item.timestamp || 0);\n    return date.toLocaleDateString();\n  });\n\n  const dataValues = history.map((item) => item.sell || item.buy || 0);\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: 'Valor ao longo do tempo',\n        data: dataValues,\n        fill: false,\n        borderColor: '#727cf5',\n        \n        color: '#f2f3f5',\n        tension: 0.4,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#f2f3f5',\n          maxRotation: 45,\n          minRotation: 45,\n        },\n        grid: {\n          color: '#444',\n        },\n      },\n      y: {\n        ticks: {\n          color: '#f2f3f5'\n        },\n        grid: {\n          color: '#444',\n        },\n      },\n    },\n  };\n\n  return (\n    <div className=\"w-full h-64 md:h-96\">\n      <Line data={data} options={options} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Table } from '@shared/components/Table/Table';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useFinancialData } from '@modules/financial/hooks/useFinancialData';\nimport { FinancialQuotationChart } from '@modules/financial/components/FinancialQuotationChart/FinancialQuotationChart';\nimport { TypeCell } from '../components/FinancialTableCells/TypeCell/TypeCell';\nimport { ValueCell } from '../components/FinancialTableCells/ValueCell/ValueCell';\nimport { VariationCell } from '../components/FinancialTableCells/VariationCell/VariationCell';\nimport { LoadingSpinner } from '@shared/components/LoadingSpinner/LoadingSpinner';\n\nexport const FinancialQuotationDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const { selectedQuotation, history, loading, error } = useFinancialData(id);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex justify-center items-center bg-secondary-700\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error || !selectedQuotation) {\n    return (\n      <div className=\"min-h-screen flex flex-col justify-center items-center bg-secondary-800\">\n        <div className=\"text-xl mb-4\">{error || \"Cotação não encontrada\"}</div>\n        <button \n          onClick={() => navigate('/')}\n          className=\"bg-primary-500 hover:bg-primary-700 text-secondary-200 font-bold py-2 px-4 rounded\"\n        >\n          Voltar para a página inicial\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen\">\n\n      <main className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n        <div className=\"shadow overflow-hidden sm:rounded-lg mb-6\">\n          <div className=\"border-t border-secondary-700\">\n            <Table striped hoverable>\n              <Table.Head>\n                <Table.Row>\n                  <Table.Cell colSpan={2}>\n                    <h3 className=\"text-lg font-medium\">\n                      Informações da Cotação\n                    </h3>\n                  </Table.Cell>\n                </Table.Row>\n              </Table.Head>\n              <Table.Body>\n                <Table.Row>\n                  <Table.Cell>Nome</Table.Cell>\n                  <Table.Cell>{selectedQuotation.name}</Table.Cell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Tipo</Table.Cell>\n                  <TypeCell type={selectedQuotation.type} />\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Valor de Compra</Table.Cell>\n                    <ValueCell \n                      type={selectedQuotation.type} \n                      buy={selectedQuotation.buy} \n                      points={selectedQuotation.points}\n                      source={selectedQuotation.source}\n                    />\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Valor de Venda</Table.Cell>\n                    <ValueCell \n                      type={selectedQuotation.type} \n                      buy={selectedQuotation.sell} \n                      points={selectedQuotation.points}\n                      source={selectedQuotation.source}\n                    />\n                </Table.Row>\n                <Table.Row>\n                  <Table.Cell>Variação</Table.Cell>\n                  <VariationCell variation={selectedQuotation.variation} />\n                </Table.Row>\n              </Table.Body>\n            </Table>\n          </div>\n        </div>\n\n        <div className=\"bg-secondary-700 shadow overflow-hidden sm:rounded-lg\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h3 className=\"text-lg leading-6 font-medium text-gray-100\">\n              Histórico de Valores\n            </h3>\n            <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">\n              Evolução da cotação desde o início da sessão\n            </p>\n          </div>\n          \n          <div className=\"p-6\">\n            <div className=\"bg-secondary-800 p-4 rounded text-center\">\n              <FinancialQuotationChart history={history} type={selectedQuotation.type} />\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};","import React from 'react';\nimport { FinancialQuotationDetail } from '@modules/financial/views/FinancialQuotationDetail';\n\nconst DetailPage: React.FC = () => {\n  return <FinancialQuotationDetail />;\n};\n\nexport default DetailPage;"],"names":["useFinancialData","quotationId","data","setData","useState","selectedQuotation","setSelectedQuotation","history","setHistory","loading","setLoading","error","setError","useEffect","fetchData","quotations","financialRepository","quotation","current","q","quotationHistory","err","interval","defaultDatasetIdKey","reforwardRef","ref","value","setOptions","chart","nextOptions","options","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","dataset","cloneData","nextData","ChartComponent","props","height","width","redraw","type","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","React","Chart","forwardRef","createTypedChart","registerables","Line","LineController","ChartJS","CategoryScale","LinearScale","LineElement","Title","Tooltip","PointElement","Legend","FinancialQuotationChart","jsx","labels","item","dataValues","FinancialQuotationDetail","id","useParams","navigate","useNavigate","LoadingSpinner","jsxs","Table","TypeCell","ValueCell","VariationCell","DetailPage"],"mappings":"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","x_google_ignoreList":[1]}